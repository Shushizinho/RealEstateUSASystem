@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing true
'skinparam linetype polyline
skinparam linetype orto
'skinparam nodesep 50

skinparam classAttributeIconSize 0

'left to right direction

class ApplicationSession
{
    + static getInstance()
    + getCurrentSession()
}

class UserSession
{
 + getUserEmail()
}

class AnnouncementRequestUI{
}


class AnnouncementRequestController{
+ getBusinessTypeByDescription(businessTypeDescription)
+ getBusinessTypes()
+getAnnouncementRequestRepository()
+getAnnouncementRepository()
+getAuthenticationRepository()
+getAgentFromSession()
+createAnnouncement(AnnouncementRequestDTO announcementRequestDTO,double commission, double listedPrice)

}

class AnnouncementRequestRepository{
-List <AnnouncementRequest> announcementRequests
+getAnnouncementRequestsByAgent()



}

class EmployeeRepository{
+getEmployeeByEmail(String email)


}

class AnnouncementRequestMapper{
+ toDTO(AnnouncementRequest announcementRequest)
+ toEntity(AnnouncementRequestDTO dto)
+ getAnnouncementsRequestsByAgentToDto(String announcementRequestsListByAgent)

}


class AnnouncementRequestDTO {
 -double listedPrice
   -Integer rentDuration
  -AgentDTO agent
 -DateTimeDTO date
 -double commission
   -BusinessTypeDTO businessType
 -PropertyDTO property
   -AnnouncementRequestDTO announcementRequest


}







class AnnouncementRepository{

-List<Announcement> Announcements
+createAnnouncement(AnnouncementRequestDTO announcementRequestDTO,double commission, double listedPrice)

}
class Address{

-String streetAddress
- String city
- String state
- String zipCode


}

class Repositories {
- Repositories()
+ getInstance() : Repositories
+ getAnnouncementRequests()
+ getAnnouncementRepository()

}


class BusinessType{

-String description

}

class PropertyType{
-String description
}

class Agent{
}

class Person{
- String email
- String name
- Integer passportNumber
- Integer phoneNumber
- String taxNumber

}

class Property{
- double price
- double area
- double distanceToCentre
- List<String> photographs

}

class Inhabitable{
 -Integer bedroomNumber
 -Integer bathroomNumber
 -Integer parkingSpaceNumber
}





class DateTime{
-Calendar date

}



class Photograph{
-String URI
}

class Employee{
-List<Role> role


}

class House {
 - Boolean hasBasement
 - Boolean hasLoft
 - String sunExposure


}
class AnnouncementRequest{
-Integer rentDuration
-boolean status

}

class Client{


}


class Announcement{
-double listedPrice
-Integer rentDuration

+ createAnnouncement( DateTime date,\n Commission commission, PropertyType propertyType, BusinessType businessType,\n Property property, Employee agent, double listedPrice)
+createAnnouncement( DateTime date,\n Commission commission, PropertyType propertyType, BusinessType businessType,\n Property property, Employee agent, double listedPrice, Integer rentDuration)
}




class Role{
 -  Integer id
  - String description
}

class Commission{
-double value
-String typeCommission

}



class Store{
   - Integer id
   -String designation
   -Address address
   - String email
    - Integer phoneNumber

}



Repositories --> Repositories : instance
Employee "*"--> "1"Store: works on a >

Repositories --> EmployeeRepository


AnnouncementRequestUI .> AnnouncementRequestController

AnnouncementRequestController ..> ApplicationSession
AnnouncementRequestController ..> UserSession

ApplicationSession --> UserSession


Repositories --> "1" AnnouncementRequestRepository
Repositories --> "1" AnnouncementRepository



Property <|---- Inhabitable

Property --> "1..30" Photograph: has

AnnouncementRepository -->"*" Announcement: contais

Announcement "1" ---> "1" DateTime: has a

Client --|> Person



Inhabitable <|-- House






Property"1" --> "1" Address: has an

Person"1" --- "1" Address: has an

Agent --|> Employee

Person <|-- Employee

AnnouncementRequest "*" <-- "1" Agent : intends to see
AnnouncementRequest"1" --> "1"DateTime: has a
AnnouncementRequest"1" --> "1"Property: refers to
AnnouncementRequest"*" <-- "1"Client: creates

Property"*"  --> "1"PropertyType: cataloged as

AnnouncementRequestRepository --> AnnouncementRequest: contais
AnnouncementRequestController ..> AnnouncementRequestMapper:AnnouncementRequestMapper
AnnouncementRequestController ..> AnnouncementRepository:AnnouncementRepository
AnnouncementRequestController ..> Repositories:repositories


AnnouncementRequestController ....> AnnouncementRequestRepository:AnnouncementRequestRepository
AnnouncementRequest"1" --> "*" BusinessType: cataloged as


Employee"1" -- "1..*"Role: has

AnnouncementRequest --> Announcement: can become

''Announcement"*" -- "1"BusinessType: cataloged as''


''Announcement"1" --"1" Property: refers to






AnnouncementRequestMapper ..> AnnouncementRequest



AnnouncementRequestMapper ..> AnnouncementRequestDTO

Store"1" --> "1" Address: has an

Property"*" -->"1" Store: listed under

EmployeeRepository"1" --> "*" Employee: contais

Announcement"1" --> "1" Commission: has a









@enduml