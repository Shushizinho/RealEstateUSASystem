@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing true
skinparam linetype ortho
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class ApplicationSession
{
    + static getInstance()
    + getCurrentSession()
}

class UserSession
{
    + getUserEmail()
}



class PropertyRepository {
    + getPropertiesByAnnouncements(announcementList)
    + getPropertyByAnnouncement(announcement)
    + addToPropertyList(propertyDTO)
}

class PropertyFilterRepository {
    + getPriceRanges()
}


class ClientRepository {
    + getClientByEmail(email)
}

class AnnouncementRepository {
     +getSaleAnnouncements()
}
class PurchaseOrderRepository {
    + placeOrder(orderAmount, propertyDescription)
    - addOffer(order)
    - validateOffer(order)
}
class Client {
    - String name
    - Integer passportNumber
    - String taxNumber
    - String email
    - Integer phoneNumber
}
class Pair{
    +getLeft()
    +getRight()
}
class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getAnnouncementRepository()
    + getPropertyRepository()
    + getStoreRepository()
    + getPropertyFilterRepository()
    + getPurchaseOrderRepository()
    + getClientRepository()
}
class StoreRepository{
    + getStoreByDescription(storeDescription)
    + getStoresWithAgents()
}
class PlaceOrderController {
    + PlaceOrderController(announcementRepository, propertyRepository, clientRepository)
    + getPriceRanges()
    + getStores()
    + getAvailableProperties(store, priceRange)
    - placeOrder(orderAmount, propertyDescription)
}
class Property {
    - double price
    - double area
    - Address address
    - double distanceToCentre
    - List<Photograph> photographs
    - PropertyType propertyType
    - DateTime date
    + sendAnnouncementRequest(businessType, property, agent)
    + getPrice()
    + getArea()
    + getAddress()
    +getDistanceToCentre()
    +getPhotographs()
    +getPropertyType()
    +getStore()
    +getClient()
}
class Inhabitable {
    - Integer bedroomNumber
    - Integer bathroomNumber
    - Integer parkingSpaceNumber
    - List<String> equipmentList
}
class Photograph {
    -String uri
}
class House {
    - Boolean hasBasement
    - Boolean hasLoft
    - String sunExposure
}

class Announcement{
    - AnnouncementRequest announcementRequest
    - Double listedPrice
    - Integer rentDuration
    - Agent agent
    - DateTime data
    - Double commission
    - BusinessType businessType
    - Property property

}
class PlaceOrderUI {
}

class PurchaseOrder {
    - Double orderAmount
    - Boolean wasAccepted
    - DateTime creationDate
    + Offer(orderAmount, announcement, client)
}

class Store {
    - Integer id
    - String designation
    - String email
    - Integer phoneNumber
    + getId()
    +getDesignation()
    +getAddress()
    +getEmail()
    +getPhoneNumber()
}
class StoreDTO{
 -Integer id
 -String designation
 -AddressDTO address
 -String email
 -long phoneNumber

}
class PropertyDTO{
 -double price
 -double area
-double distanceToCentre
-List<PhotographDTO> photographs
-PropertyTypeDTO propertyType
-PhotographDTO photgraphs

}
class StoreMapper {
    -toDTO(storesWithAgents)
}
class PropertyMapper{
    -toDTO(property)
}
class PairMapper{
    -toDTO(pair)
}
Repositories -> Repositories : instance
ApplicationSession -> ApplicationSession : instance

PlaceOrderUI .> PlaceOrderController

PlaceOrderController ..> Repositories : repositories

Repositories -> "1" PropertyRepository

Property"1" <-- "1"Announcement
Announcement"1" <-- "1"PurchaseOrder
PurchaseOrder"1" --> "1"Client : placed by
PlaceOrderController ..> PropertyRepository : propertyRepository
PlaceOrderController ..> AnnouncementRepository : announcementRepository
PlaceOrderController ..> PurchaseOrderRepository : purchaseOrderRepository
PlaceOrderController ..> ClientRepository : clientRepository
PlaceOrderController ....> PropertyFilterRepository : propertyFilterRepository
PlaceOrderController ....> StoreRepository : storeRepository
StoreRepository --> StoreMapper
StoreMapper --> StoreDTO
StoreMapper --> Store
PropertyFilterRepository --> PairMapper
PairMapper --> PairDTO
PairMapper --> Pair
PropertyRepository --> PropertyMapper
PropertyMapper --> PropertyDTO
PropertyMapper --> Property
Property "*" --> "1" Client

Repositories --> "1" AnnouncementRepository
Repositories --> "1" PurchaseOrderRepository
Repositories --> "1" ClientRepository
Repositories ---> "1" StoreRepository
Repositories ---> "1" PropertyFilterRepository

AnnouncementRepository --> "*" Announcement
PurchaseOrderRepository --> "*" PurchaseOrder
PropertyRepository --> "*" Property
ClientRepository --> "*" Client
ApplicationSession --> "1" UserSession : userSession
StoreRepository "1" ---> "*" Store : store
Property "*" ---> "1" Store
Property "1" -> "1..30" Photograph
PlaceOrderController ..> ApplicationSession
PlaceOrderController ..> UserSession
'Property <|... Land : is a
Property <|.. Inhabitable : is a
'Inhabitable <|.. Apartment : is a
Inhabitable <|.. House : is a

@enduml