@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing true
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class ApplicationSession
{
    + static getInstance()
    + getCurrentSession()
}

class UserSession
{
    + getUserEmail()
}

class Client {
    - String name
    - String email
    - Integer passportNumber
    - String taxNumber
    - Address address
    - Integer phoneNumber
}

class Address{
     - String streetAddress
     - String state
     - Integer zipCode
}


class Employee{
    - String name
    - Integer passportNumber
    - String taxNumber
    - String email
    - Integer phoneNumber
}

class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getPropertyRepository()
    + getVisitRequestRepository()
    +getClientRepository()
}
class propertyRepository{
    +getProperties()
}

class ClientRepository{
'    - ArrayList<Client> clients
'    + getClientName()
'    + getClientPhoneNumber()
    + getClient()
}

class VisitRequestRepository{
'    - ArrayList <VisitRequest> visitRequest
    + getVisitRequests()
}

class VisitRequest{
'    - Property property
    - String preferredDate
    - String timeSlot
    - String clientName
    - Integer clientPhoneNumber
}


class Property {
}


class Agent {

}

class Person{
    - String name
'    - Integer passportNumber
'    - String taxNumber
    - String email
'    - Long phoneNumber
}


class ListBookingRequestController {
    + ListBookingRequestController()
    - getAgentFromSession()
    + getClientLIst()
    + getVisitRequests()

}

class PropertyType{
-String description
}

class Role {
-Integer id
-String description
}


class ListBookingRequestUI {
}

ApplicationSession -> ApplicationSession : instance
ListBookingRequestUI .> ListBookingRequestController
ApplicationSession -> "1" UserSession : userSession
ListBookingRequestController .> ApplicationSession
ListBookingRequestController ..> UserSession
ListBookingRequestController .> Repositories : repositories
Repositories -> Repositories : instance
ListBookingRequestController -> Agent : Agent
Agent --|> Employee : implements
Address "1" <-- "1"  Person
Address "1" <- "1" Property
Repositories -> "1" propertyRepository
propertyRepository "1"-->"*" Property
ListBookingRequestController ..> propertyRepository : propertyRepository
ListBookingRequestController ..> VisitRequestRepository : visitRequestRepository
ListBookingRequestController ..> ClientRepository : clientRepository
Repositories --> "1" ClientRepository
ClientRepository --> "1" Client
VisitRequestRepository "1" -> "1" VisitRequest
Repositories --> "1" VisitRequestRepository
Client "1" --> "*" VisitRequest : creates
Agent "1" -> "*" VisitRequest : responds
VisitRequest "*" --> "1" Property
Role"1" <-- "*"Employee : has a
Property"*" --> "1"PropertyType
Person <|- Client
Person <|-- Employee


@enduml